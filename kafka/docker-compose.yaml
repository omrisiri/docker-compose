version: '3.2'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181


  kafka:
    image: wurstmeister/kafka
    container_name: kafka1
    hostname: kafka1
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      # explicitly set hostname when scaling to multiple nodes
#      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP:-127.0.0.1}
      HOSTNAME_COMMAND: "hostname"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      #KAFKA_CREATE_TOPICS: "language-pit.events:1:1"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    hostname: kafka2
    ports:
      - target: 9095
        published: 9095
        protocol: tcp
        mode: host
    environment:
      # explicitly set hostname when scaling to multiple nodes
#      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP:-127.0.0.1}
      HOSTNAME_COMMAND: "hostname"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9093,OUTSIDE://_{HOSTNAME_COMMAND}:9095
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9095
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        #     - ./kafka-storage/zk-single-kafka-multiple/kafka3/data:/var/lib/kafka/data
  python-dev:
    image: python:latest
    hostname: python
    container_name: pythondev
    command: ["sleep","100000"]

